{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.metrics import confusion_matrix, classification_report,accuracy_score,roc_auc_score\n",
    "import seaborn as sns\n",
    "from sklearn import metrics\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Importing Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('creditcard.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dataset Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n",
       "       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n",
       "       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount',\n",
       "       'Class'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 284807 entries, 0 to 284806\n",
      "Data columns (total 31 columns):\n",
      "Time      284807 non-null float64\n",
      "V1        284807 non-null float64\n",
      "V2        284807 non-null float64\n",
      "V3        284807 non-null float64\n",
      "V4        284807 non-null float64\n",
      "V5        284807 non-null float64\n",
      "V6        284807 non-null float64\n",
      "V7        284807 non-null float64\n",
      "V8        284807 non-null float64\n",
      "V9        284807 non-null float64\n",
      "V10       284807 non-null float64\n",
      "V11       284807 non-null float64\n",
      "V12       284807 non-null float64\n",
      "V13       284807 non-null float64\n",
      "V14       284807 non-null float64\n",
      "V15       284807 non-null float64\n",
      "V16       284807 non-null float64\n",
      "V17       284807 non-null float64\n",
      "V18       284807 non-null float64\n",
      "V19       284807 non-null float64\n",
      "V20       284807 non-null float64\n",
      "V21       284807 non-null float64\n",
      "V22       284807 non-null float64\n",
      "V23       284807 non-null float64\n",
      "V24       284807 non-null float64\n",
      "V25       284807 non-null float64\n",
      "V26       284807 non-null float64\n",
      "V27       284807 non-null float64\n",
      "V28       284807 non-null float64\n",
      "Amount    284807 non-null float64\n",
      "Class     284807 non-null int64\n",
      "dtypes: float64(30), int64(1)\n",
      "memory usage: 67.4 MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "      <th>V3</th>\n",
       "      <th>V4</th>\n",
       "      <th>V5</th>\n",
       "      <th>V6</th>\n",
       "      <th>V7</th>\n",
       "      <th>V8</th>\n",
       "      <th>V9</th>\n",
       "      <th>...</th>\n",
       "      <th>V21</th>\n",
       "      <th>V22</th>\n",
       "      <th>V23</th>\n",
       "      <th>V24</th>\n",
       "      <th>V25</th>\n",
       "      <th>V26</th>\n",
       "      <th>V27</th>\n",
       "      <th>V28</th>\n",
       "      <th>Amount</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>284807.000000</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>...</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>2.848070e+05</td>\n",
       "      <td>284807.000000</td>\n",
       "      <td>284807.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>94813.859575</td>\n",
       "      <td>3.919560e-15</td>\n",
       "      <td>5.688174e-16</td>\n",
       "      <td>-8.769071e-15</td>\n",
       "      <td>2.782312e-15</td>\n",
       "      <td>-1.552563e-15</td>\n",
       "      <td>2.010663e-15</td>\n",
       "      <td>-1.694249e-15</td>\n",
       "      <td>-1.927028e-16</td>\n",
       "      <td>-3.137024e-15</td>\n",
       "      <td>...</td>\n",
       "      <td>1.537294e-16</td>\n",
       "      <td>7.959909e-16</td>\n",
       "      <td>5.367590e-16</td>\n",
       "      <td>4.458112e-15</td>\n",
       "      <td>1.453003e-15</td>\n",
       "      <td>1.699104e-15</td>\n",
       "      <td>-3.660161e-16</td>\n",
       "      <td>-1.206049e-16</td>\n",
       "      <td>88.349619</td>\n",
       "      <td>0.001727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>47488.145955</td>\n",
       "      <td>1.958696e+00</td>\n",
       "      <td>1.651309e+00</td>\n",
       "      <td>1.516255e+00</td>\n",
       "      <td>1.415869e+00</td>\n",
       "      <td>1.380247e+00</td>\n",
       "      <td>1.332271e+00</td>\n",
       "      <td>1.237094e+00</td>\n",
       "      <td>1.194353e+00</td>\n",
       "      <td>1.098632e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>7.345240e-01</td>\n",
       "      <td>7.257016e-01</td>\n",
       "      <td>6.244603e-01</td>\n",
       "      <td>6.056471e-01</td>\n",
       "      <td>5.212781e-01</td>\n",
       "      <td>4.822270e-01</td>\n",
       "      <td>4.036325e-01</td>\n",
       "      <td>3.300833e-01</td>\n",
       "      <td>250.120109</td>\n",
       "      <td>0.041527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-5.640751e+01</td>\n",
       "      <td>-7.271573e+01</td>\n",
       "      <td>-4.832559e+01</td>\n",
       "      <td>-5.683171e+00</td>\n",
       "      <td>-1.137433e+02</td>\n",
       "      <td>-2.616051e+01</td>\n",
       "      <td>-4.355724e+01</td>\n",
       "      <td>-7.321672e+01</td>\n",
       "      <td>-1.343407e+01</td>\n",
       "      <td>...</td>\n",
       "      <td>-3.483038e+01</td>\n",
       "      <td>-1.093314e+01</td>\n",
       "      <td>-4.480774e+01</td>\n",
       "      <td>-2.836627e+00</td>\n",
       "      <td>-1.029540e+01</td>\n",
       "      <td>-2.604551e+00</td>\n",
       "      <td>-2.256568e+01</td>\n",
       "      <td>-1.543008e+01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>54201.500000</td>\n",
       "      <td>-9.203734e-01</td>\n",
       "      <td>-5.985499e-01</td>\n",
       "      <td>-8.903648e-01</td>\n",
       "      <td>-8.486401e-01</td>\n",
       "      <td>-6.915971e-01</td>\n",
       "      <td>-7.682956e-01</td>\n",
       "      <td>-5.540759e-01</td>\n",
       "      <td>-2.086297e-01</td>\n",
       "      <td>-6.430976e-01</td>\n",
       "      <td>...</td>\n",
       "      <td>-2.283949e-01</td>\n",
       "      <td>-5.423504e-01</td>\n",
       "      <td>-1.618463e-01</td>\n",
       "      <td>-3.545861e-01</td>\n",
       "      <td>-3.171451e-01</td>\n",
       "      <td>-3.269839e-01</td>\n",
       "      <td>-7.083953e-02</td>\n",
       "      <td>-5.295979e-02</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>84692.000000</td>\n",
       "      <td>1.810880e-02</td>\n",
       "      <td>6.548556e-02</td>\n",
       "      <td>1.798463e-01</td>\n",
       "      <td>-1.984653e-02</td>\n",
       "      <td>-5.433583e-02</td>\n",
       "      <td>-2.741871e-01</td>\n",
       "      <td>4.010308e-02</td>\n",
       "      <td>2.235804e-02</td>\n",
       "      <td>-5.142873e-02</td>\n",
       "      <td>...</td>\n",
       "      <td>-2.945017e-02</td>\n",
       "      <td>6.781943e-03</td>\n",
       "      <td>-1.119293e-02</td>\n",
       "      <td>4.097606e-02</td>\n",
       "      <td>1.659350e-02</td>\n",
       "      <td>-5.213911e-02</td>\n",
       "      <td>1.342146e-03</td>\n",
       "      <td>1.124383e-02</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>139320.500000</td>\n",
       "      <td>1.315642e+00</td>\n",
       "      <td>8.037239e-01</td>\n",
       "      <td>1.027196e+00</td>\n",
       "      <td>7.433413e-01</td>\n",
       "      <td>6.119264e-01</td>\n",
       "      <td>3.985649e-01</td>\n",
       "      <td>5.704361e-01</td>\n",
       "      <td>3.273459e-01</td>\n",
       "      <td>5.971390e-01</td>\n",
       "      <td>...</td>\n",
       "      <td>1.863772e-01</td>\n",
       "      <td>5.285536e-01</td>\n",
       "      <td>1.476421e-01</td>\n",
       "      <td>4.395266e-01</td>\n",
       "      <td>3.507156e-01</td>\n",
       "      <td>2.409522e-01</td>\n",
       "      <td>9.104512e-02</td>\n",
       "      <td>7.827995e-02</td>\n",
       "      <td>77.165000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>172792.000000</td>\n",
       "      <td>2.454930e+00</td>\n",
       "      <td>2.205773e+01</td>\n",
       "      <td>9.382558e+00</td>\n",
       "      <td>1.687534e+01</td>\n",
       "      <td>3.480167e+01</td>\n",
       "      <td>7.330163e+01</td>\n",
       "      <td>1.205895e+02</td>\n",
       "      <td>2.000721e+01</td>\n",
       "      <td>1.559499e+01</td>\n",
       "      <td>...</td>\n",
       "      <td>2.720284e+01</td>\n",
       "      <td>1.050309e+01</td>\n",
       "      <td>2.252841e+01</td>\n",
       "      <td>4.584549e+00</td>\n",
       "      <td>7.519589e+00</td>\n",
       "      <td>3.517346e+00</td>\n",
       "      <td>3.161220e+01</td>\n",
       "      <td>3.384781e+01</td>\n",
       "      <td>25691.160000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Time            V1            V2            V3            V4  \\\n",
       "count  284807.000000  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n",
       "mean    94813.859575  3.919560e-15  5.688174e-16 -8.769071e-15  2.782312e-15   \n",
       "std     47488.145955  1.958696e+00  1.651309e+00  1.516255e+00  1.415869e+00   \n",
       "min         0.000000 -5.640751e+01 -7.271573e+01 -4.832559e+01 -5.683171e+00   \n",
       "25%     54201.500000 -9.203734e-01 -5.985499e-01 -8.903648e-01 -8.486401e-01   \n",
       "50%     84692.000000  1.810880e-02  6.548556e-02  1.798463e-01 -1.984653e-02   \n",
       "75%    139320.500000  1.315642e+00  8.037239e-01  1.027196e+00  7.433413e-01   \n",
       "max    172792.000000  2.454930e+00  2.205773e+01  9.382558e+00  1.687534e+01   \n",
       "\n",
       "                 V5            V6            V7            V8            V9  \\\n",
       "count  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n",
       "mean  -1.552563e-15  2.010663e-15 -1.694249e-15 -1.927028e-16 -3.137024e-15   \n",
       "std    1.380247e+00  1.332271e+00  1.237094e+00  1.194353e+00  1.098632e+00   \n",
       "min   -1.137433e+02 -2.616051e+01 -4.355724e+01 -7.321672e+01 -1.343407e+01   \n",
       "25%   -6.915971e-01 -7.682956e-01 -5.540759e-01 -2.086297e-01 -6.430976e-01   \n",
       "50%   -5.433583e-02 -2.741871e-01  4.010308e-02  2.235804e-02 -5.142873e-02   \n",
       "75%    6.119264e-01  3.985649e-01  5.704361e-01  3.273459e-01  5.971390e-01   \n",
       "max    3.480167e+01  7.330163e+01  1.205895e+02  2.000721e+01  1.559499e+01   \n",
       "\n",
       "       ...           V21           V22           V23           V24  \\\n",
       "count  ...  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n",
       "mean   ...  1.537294e-16  7.959909e-16  5.367590e-16  4.458112e-15   \n",
       "std    ...  7.345240e-01  7.257016e-01  6.244603e-01  6.056471e-01   \n",
       "min    ... -3.483038e+01 -1.093314e+01 -4.480774e+01 -2.836627e+00   \n",
       "25%    ... -2.283949e-01 -5.423504e-01 -1.618463e-01 -3.545861e-01   \n",
       "50%    ... -2.945017e-02  6.781943e-03 -1.119293e-02  4.097606e-02   \n",
       "75%    ...  1.863772e-01  5.285536e-01  1.476421e-01  4.395266e-01   \n",
       "max    ...  2.720284e+01  1.050309e+01  2.252841e+01  4.584549e+00   \n",
       "\n",
       "                V25           V26           V27           V28         Amount  \\\n",
       "count  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05  284807.000000   \n",
       "mean   1.453003e-15  1.699104e-15 -3.660161e-16 -1.206049e-16      88.349619   \n",
       "std    5.212781e-01  4.822270e-01  4.036325e-01  3.300833e-01     250.120109   \n",
       "min   -1.029540e+01 -2.604551e+00 -2.256568e+01 -1.543008e+01       0.000000   \n",
       "25%   -3.171451e-01 -3.269839e-01 -7.083953e-02 -5.295979e-02       5.600000   \n",
       "50%    1.659350e-02 -5.213911e-02  1.342146e-03  1.124383e-02      22.000000   \n",
       "75%    3.507156e-01  2.409522e-01  9.104512e-02  7.827995e-02      77.165000   \n",
       "max    7.519589e+00  3.517346e+00  3.161220e+01  3.384781e+01   25691.160000   \n",
       "\n",
       "               Class  \n",
       "count  284807.000000  \n",
       "mean        0.001727  \n",
       "std         0.041527  \n",
       "min         0.000000  \n",
       "25%         0.000000  \n",
       "50%         0.000000  \n",
       "75%         0.000000  \n",
       "max         1.000000  \n",
       "\n",
       "[8 rows x 31 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "      <th>V3</th>\n",
       "      <th>V4</th>\n",
       "      <th>V5</th>\n",
       "      <th>V6</th>\n",
       "      <th>V7</th>\n",
       "      <th>V8</th>\n",
       "      <th>V9</th>\n",
       "      <th>...</th>\n",
       "      <th>V21</th>\n",
       "      <th>V22</th>\n",
       "      <th>V23</th>\n",
       "      <th>V24</th>\n",
       "      <th>V25</th>\n",
       "      <th>V26</th>\n",
       "      <th>V27</th>\n",
       "      <th>V28</th>\n",
       "      <th>Amount</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-1.359807</td>\n",
       "      <td>-0.072781</td>\n",
       "      <td>2.536347</td>\n",
       "      <td>1.378155</td>\n",
       "      <td>-0.338321</td>\n",
       "      <td>0.462388</td>\n",
       "      <td>0.239599</td>\n",
       "      <td>0.098698</td>\n",
       "      <td>0.363787</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.018307</td>\n",
       "      <td>0.277838</td>\n",
       "      <td>-0.110474</td>\n",
       "      <td>0.066928</td>\n",
       "      <td>0.128539</td>\n",
       "      <td>-0.189115</td>\n",
       "      <td>0.133558</td>\n",
       "      <td>-0.021053</td>\n",
       "      <td>149.62</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.191857</td>\n",
       "      <td>0.266151</td>\n",
       "      <td>0.166480</td>\n",
       "      <td>0.448154</td>\n",
       "      <td>0.060018</td>\n",
       "      <td>-0.082361</td>\n",
       "      <td>-0.078803</td>\n",
       "      <td>0.085102</td>\n",
       "      <td>-0.255425</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.225775</td>\n",
       "      <td>-0.638672</td>\n",
       "      <td>0.101288</td>\n",
       "      <td>-0.339846</td>\n",
       "      <td>0.167170</td>\n",
       "      <td>0.125895</td>\n",
       "      <td>-0.008983</td>\n",
       "      <td>0.014724</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-1.358354</td>\n",
       "      <td>-1.340163</td>\n",
       "      <td>1.773209</td>\n",
       "      <td>0.379780</td>\n",
       "      <td>-0.503198</td>\n",
       "      <td>1.800499</td>\n",
       "      <td>0.791461</td>\n",
       "      <td>0.247676</td>\n",
       "      <td>-1.514654</td>\n",
       "      <td>...</td>\n",
       "      <td>0.247998</td>\n",
       "      <td>0.771679</td>\n",
       "      <td>0.909412</td>\n",
       "      <td>-0.689281</td>\n",
       "      <td>-0.327642</td>\n",
       "      <td>-0.139097</td>\n",
       "      <td>-0.055353</td>\n",
       "      <td>-0.059752</td>\n",
       "      <td>378.66</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-0.966272</td>\n",
       "      <td>-0.185226</td>\n",
       "      <td>1.792993</td>\n",
       "      <td>-0.863291</td>\n",
       "      <td>-0.010309</td>\n",
       "      <td>1.247203</td>\n",
       "      <td>0.237609</td>\n",
       "      <td>0.377436</td>\n",
       "      <td>-1.387024</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.108300</td>\n",
       "      <td>0.005274</td>\n",
       "      <td>-0.190321</td>\n",
       "      <td>-1.175575</td>\n",
       "      <td>0.647376</td>\n",
       "      <td>-0.221929</td>\n",
       "      <td>0.062723</td>\n",
       "      <td>0.061458</td>\n",
       "      <td>123.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>-1.158233</td>\n",
       "      <td>0.877737</td>\n",
       "      <td>1.548718</td>\n",
       "      <td>0.403034</td>\n",
       "      <td>-0.407193</td>\n",
       "      <td>0.095921</td>\n",
       "      <td>0.592941</td>\n",
       "      <td>-0.270533</td>\n",
       "      <td>0.817739</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009431</td>\n",
       "      <td>0.798278</td>\n",
       "      <td>-0.137458</td>\n",
       "      <td>0.141267</td>\n",
       "      <td>-0.206010</td>\n",
       "      <td>0.502292</td>\n",
       "      <td>0.219422</td>\n",
       "      <td>0.215153</td>\n",
       "      <td>69.99</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>-0.425966</td>\n",
       "      <td>0.960523</td>\n",
       "      <td>1.141109</td>\n",
       "      <td>-0.168252</td>\n",
       "      <td>0.420987</td>\n",
       "      <td>-0.029728</td>\n",
       "      <td>0.476201</td>\n",
       "      <td>0.260314</td>\n",
       "      <td>-0.568671</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.208254</td>\n",
       "      <td>-0.559825</td>\n",
       "      <td>-0.026398</td>\n",
       "      <td>-0.371427</td>\n",
       "      <td>-0.232794</td>\n",
       "      <td>0.105915</td>\n",
       "      <td>0.253844</td>\n",
       "      <td>0.081080</td>\n",
       "      <td>3.67</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.229658</td>\n",
       "      <td>0.141004</td>\n",
       "      <td>0.045371</td>\n",
       "      <td>1.202613</td>\n",
       "      <td>0.191881</td>\n",
       "      <td>0.272708</td>\n",
       "      <td>-0.005159</td>\n",
       "      <td>0.081213</td>\n",
       "      <td>0.464960</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.167716</td>\n",
       "      <td>-0.270710</td>\n",
       "      <td>-0.154104</td>\n",
       "      <td>-0.780055</td>\n",
       "      <td>0.750137</td>\n",
       "      <td>-0.257237</td>\n",
       "      <td>0.034507</td>\n",
       "      <td>0.005168</td>\n",
       "      <td>4.99</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>-0.644269</td>\n",
       "      <td>1.417964</td>\n",
       "      <td>1.074380</td>\n",
       "      <td>-0.492199</td>\n",
       "      <td>0.948934</td>\n",
       "      <td>0.428118</td>\n",
       "      <td>1.120631</td>\n",
       "      <td>-3.807864</td>\n",
       "      <td>0.615375</td>\n",
       "      <td>...</td>\n",
       "      <td>1.943465</td>\n",
       "      <td>-1.015455</td>\n",
       "      <td>0.057504</td>\n",
       "      <td>-0.649709</td>\n",
       "      <td>-0.415267</td>\n",
       "      <td>-0.051634</td>\n",
       "      <td>-1.206921</td>\n",
       "      <td>-1.085339</td>\n",
       "      <td>40.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>7.0</td>\n",
       "      <td>-0.894286</td>\n",
       "      <td>0.286157</td>\n",
       "      <td>-0.113192</td>\n",
       "      <td>-0.271526</td>\n",
       "      <td>2.669599</td>\n",
       "      <td>3.721818</td>\n",
       "      <td>0.370145</td>\n",
       "      <td>0.851084</td>\n",
       "      <td>-0.392048</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.073425</td>\n",
       "      <td>-0.268092</td>\n",
       "      <td>-0.204233</td>\n",
       "      <td>1.011592</td>\n",
       "      <td>0.373205</td>\n",
       "      <td>-0.384157</td>\n",
       "      <td>0.011747</td>\n",
       "      <td>0.142404</td>\n",
       "      <td>93.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>9.0</td>\n",
       "      <td>-0.338262</td>\n",
       "      <td>1.119593</td>\n",
       "      <td>1.044367</td>\n",
       "      <td>-0.222187</td>\n",
       "      <td>0.499361</td>\n",
       "      <td>-0.246761</td>\n",
       "      <td>0.651583</td>\n",
       "      <td>0.069539</td>\n",
       "      <td>-0.736727</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.246914</td>\n",
       "      <td>-0.633753</td>\n",
       "      <td>-0.120794</td>\n",
       "      <td>-0.385050</td>\n",
       "      <td>-0.069733</td>\n",
       "      <td>0.094199</td>\n",
       "      <td>0.246219</td>\n",
       "      <td>0.083076</td>\n",
       "      <td>3.68</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Time        V1        V2        V3        V4        V5        V6        V7  \\\n",
       "0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n",
       "1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n",
       "2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n",
       "3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n",
       "4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n",
       "5   2.0 -0.425966  0.960523  1.141109 -0.168252  0.420987 -0.029728  0.476201   \n",
       "6   4.0  1.229658  0.141004  0.045371  1.202613  0.191881  0.272708 -0.005159   \n",
       "7   7.0 -0.644269  1.417964  1.074380 -0.492199  0.948934  0.428118  1.120631   \n",
       "8   7.0 -0.894286  0.286157 -0.113192 -0.271526  2.669599  3.721818  0.370145   \n",
       "9   9.0 -0.338262  1.119593  1.044367 -0.222187  0.499361 -0.246761  0.651583   \n",
       "\n",
       "         V8        V9  ...       V21       V22       V23       V24       V25  \\\n",
       "0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n",
       "1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n",
       "2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n",
       "3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n",
       "4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n",
       "5  0.260314 -0.568671  ... -0.208254 -0.559825 -0.026398 -0.371427 -0.232794   \n",
       "6  0.081213  0.464960  ... -0.167716 -0.270710 -0.154104 -0.780055  0.750137   \n",
       "7 -3.807864  0.615375  ...  1.943465 -1.015455  0.057504 -0.649709 -0.415267   \n",
       "8  0.851084 -0.392048  ... -0.073425 -0.268092 -0.204233  1.011592  0.373205   \n",
       "9  0.069539 -0.736727  ... -0.246914 -0.633753 -0.120794 -0.385050 -0.069733   \n",
       "\n",
       "        V26       V27       V28  Amount  Class  \n",
       "0 -0.189115  0.133558 -0.021053  149.62      0  \n",
       "1  0.125895 -0.008983  0.014724    2.69      0  \n",
       "2 -0.139097 -0.055353 -0.059752  378.66      0  \n",
       "3 -0.221929  0.062723  0.061458  123.50      0  \n",
       "4  0.502292  0.219422  0.215153   69.99      0  \n",
       "5  0.105915  0.253844  0.081080    3.67      0  \n",
       "6 -0.257237  0.034507  0.005168    4.99      0  \n",
       "7 -0.051634 -1.206921 -1.085339   40.80      0  \n",
       "8 -0.384157  0.011747  0.142404   93.20      0  \n",
       "9  0.094199  0.246219  0.083076    3.68      0  \n",
       "\n",
       "[10 rows x 31 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time      9.481386e+04\n",
       "V1        3.919560e-15\n",
       "V2        5.688174e-16\n",
       "V3       -8.769071e-15\n",
       "V4        2.782312e-15\n",
       "V5       -1.552563e-15\n",
       "V6        2.010663e-15\n",
       "V7       -1.694249e-15\n",
       "V8       -1.927028e-16\n",
       "V9       -3.137024e-15\n",
       "V10       1.768627e-15\n",
       "V11       9.170318e-16\n",
       "V12      -1.810658e-15\n",
       "V13       1.693438e-15\n",
       "V14       1.479045e-15\n",
       "V15       3.482336e-15\n",
       "V16       1.392007e-15\n",
       "V17      -7.528491e-16\n",
       "V18       4.328772e-16\n",
       "V19       9.049732e-16\n",
       "V20       5.085503e-16\n",
       "V21       1.537294e-16\n",
       "V22       7.959909e-16\n",
       "V23       5.367590e-16\n",
       "V24       4.458112e-15\n",
       "V25       1.453003e-15\n",
       "V26       1.699104e-15\n",
       "V27      -3.660161e-16\n",
       "V28      -1.206049e-16\n",
       "Amount    8.834962e+01\n",
       "Class     1.727486e-03\n",
       "dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time      47488.145955\n",
       "V1            1.958696\n",
       "V2            1.651309\n",
       "V3            1.516255\n",
       "V4            1.415869\n",
       "V5            1.380247\n",
       "V6            1.332271\n",
       "V7            1.237094\n",
       "V8            1.194353\n",
       "V9            1.098632\n",
       "V10           1.088850\n",
       "V11           1.020713\n",
       "V12           0.999201\n",
       "V13           0.995274\n",
       "V14           0.958596\n",
       "V15           0.915316\n",
       "V16           0.876253\n",
       "V17           0.849337\n",
       "V18           0.838176\n",
       "V19           0.814041\n",
       "V20           0.770925\n",
       "V21           0.734524\n",
       "V22           0.725702\n",
       "V23           0.624460\n",
       "V24           0.605647\n",
       "V25           0.521278\n",
       "V26           0.482227\n",
       "V27           0.403632\n",
       "V28           0.330083\n",
       "Amount      250.120109\n",
       "Class         0.041527\n",
       "dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.std()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking Null Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "null = df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time      0\n",
       "V1        0\n",
       "V2        0\n",
       "V3        0\n",
       "V4        0\n",
       "V5        0\n",
       "V6        0\n",
       "V7        0\n",
       "V8        0\n",
       "V9        0\n",
       "V10       0\n",
       "V11       0\n",
       "V12       0\n",
       "V13       0\n",
       "V14       0\n",
       "V15       0\n",
       "V16       0\n",
       "V17       0\n",
       "V18       0\n",
       "V19       0\n",
       "V20       0\n",
       "V21       0\n",
       "V22       0\n",
       "V23       0\n",
       "V24       0\n",
       "V25       0\n",
       "V26       0\n",
       "V27       0\n",
       "V28       0\n",
       "Amount    0\n",
       "Class     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "null"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "percentage_null = df.isnull().sum()/len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Time      0.0\n",
       "V1        0.0\n",
       "V2        0.0\n",
       "V3        0.0\n",
       "V4        0.0\n",
       "V5        0.0\n",
       "V6        0.0\n",
       "V7        0.0\n",
       "V8        0.0\n",
       "V9        0.0\n",
       "V10       0.0\n",
       "V11       0.0\n",
       "V12       0.0\n",
       "V13       0.0\n",
       "V14       0.0\n",
       "V15       0.0\n",
       "V16       0.0\n",
       "V17       0.0\n",
       "V18       0.0\n",
       "V19       0.0\n",
       "V20       0.0\n",
       "V21       0.0\n",
       "V22       0.0\n",
       "V23       0.0\n",
       "V24       0.0\n",
       "V25       0.0\n",
       "V26       0.0\n",
       "V27       0.0\n",
       "V28       0.0\n",
       "Amount    0.0\n",
       "Class     0.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "percentage_null"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Identifying Classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    284315\n",
       "1       492\n",
       "Name: Class, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Class'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Visualisation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a0fe0a090>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df['Class'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x1008 with 36 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "df.hist(figsize = (16,14))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Machine Learning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop([\"Class\"],axis=1)\n",
    "y = df[\"Class\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dividing Data into train and test set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set: (227845, 30) (227845,)\n",
      "Test set: (56962, 30) (56962,)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split( X, y, test_size = 0.2, random_state = 42)\n",
    "print ('Train set:', X_train.shape,  y_train.shape)\n",
    "print ('Test set:', X_test.shape,  y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/logistic.py:432: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "lr = LogisticRegression()\n",
    "lr.fit(X_train,y_train)\n",
    "lr_predt = lr.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Accuracy Measurement- Confusion Matrix\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[56853    11]\n",
      " [   46    52]]\n",
      "99.89993328885924\n"
     ]
    }
   ],
   "source": [
    "lr_confusion_matrix = confusion_matrix(y_test,lr_predt )\n",
    "lr_accuracy_score = accuracy_score(y_test, lr_predt)\n",
    "print(lr_confusion_matrix)\n",
    "print(lr_accuracy_score*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1, 'Confusion Matrix')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matrix = confusion_matrix(y_test, lr_predt)\n",
    "sns.heatmap(matrix,annot=True,cbar=False)\n",
    "plt.ylabel('True Label')\n",
    "plt.xlabel('Predicted Label')\n",
    "plt.title('Confusion Matrix')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Classification Report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00     56864\n",
      "           1       0.83      0.53      0.65        98\n",
      "\n",
      "    accuracy                           1.00     56962\n",
      "   macro avg       0.91      0.77      0.82     56962\n",
      "weighted avg       1.00      1.00      1.00     56962\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, lr_predt))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Accuracy Measurement - (ROC-AUC)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7652094004456033"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "auc_roc=metrics.roc_auc_score(y_test,lr_predt)\n",
    "auc_roc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7652094004456033"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve, auc\n",
    "false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test, lr_predt)\n",
    "roc_auc = auc(false_positive_rate, true_positive_rate)\n",
    "roc_auc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ROC Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'False Positive Rate')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(10,10))\n",
    "plt.title('Receiver Operating Characteristic')\n",
    "plt.plot(false_positive_rate,true_positive_rate, color='red',label = 'AUC = %0.2f' % roc_auc)\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.plot([0, 1], [0, 1],linestyle='--')\n",
    "plt.axis('tight')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.xlabel('False Positive Rate')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average precision-recall score RF: 0.43877321836992766\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import average_precision_score, auc, roc_curve, precision_recall_curve\n",
    "average_precision = average_precision_score(y_test, lr_predt)\n",
    "print('Average precision-recall score RF: {}'.format(average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Precison-Recall Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, '2-class Precision-Recall curve: AP=0.44')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import precision_recall_curve\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "precision, recall, _ = precision_recall_curve(y_test, lr_predt)\n",
    "\n",
    "plt.step(recall, precision, color='b', alpha=0.2,\n",
    "         where='post')\n",
    "plt.fill_between(recall, precision, step='post', alpha=0.2,\n",
    "                 color='b')\n",
    "\n",
    "plt.xlabel('Recall')\n",
    "plt.ylabel('Precision')\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.title('2-class Precision-Recall curve: AP={0:0.2f}'.format(\n",
    "          average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Log-Loss Score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.03456197201786626\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import log_loss\n",
    "score = log_loss(y_test, lr_predt)\n",
    "print(score)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# F1 - Score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import f1_score, recall_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6459627329192548"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f1_score(y_test, lr_predt)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5306122448979592"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_score(y_test, lr_predt)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rf = RandomForestClassifier(n_estimators=300)\n",
    "rf.fit(X_train, y_train)\n",
    "rf_pred=rf.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[56862     2]\n",
      " [   21    77]]\n",
      "99.95962220427653\n"
     ]
    }
   ],
   "source": [
    "rf_conf_matrix = confusion_matrix(y_test, rf_pred)\n",
    "rf_acc_score = accuracy_score(y_test, rf_pred)\n",
    "print(rf_conf_matrix)\n",
    "print(rf_acc_score*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1, 'Confusion Matrix')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matrix = confusion_matrix(y_test, rf_pred)\n",
    "sns.heatmap(matrix,annot=True,cbar=False)\n",
    "plt.ylabel('True Label')\n",
    "plt.xlabel('Predicted Label')\n",
    "plt.title('Confusion Matrix')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Classification Report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00     56864\n",
      "           1       0.97      0.79      0.87        98\n",
      "\n",
      "    accuracy                           1.00     56962\n",
      "   macro avg       0.99      0.89      0.93     56962\n",
      "weighted avg       1.00      1.00      1.00     56962\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, rf_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ROC - AUC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.892839557038347"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "auc_roc=metrics.roc_auc_score(y_test,rf_pred)\n",
    "auc_roc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.892839557038347"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve, auc\n",
    "false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test, rf_pred)\n",
    "roc_auc = auc(false_positive_rate, true_positive_rate)\n",
    "roc_auc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ROC - AUC Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'False Positive Rate')"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(10,10))\n",
    "plt.title('Receiver Operating Characteristic')\n",
    "plt.plot(false_positive_rate,true_positive_rate, color='red',label = 'AUC = %0.2f' % roc_auc)\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.plot([0, 1], [0, 1],linestyle='--')\n",
    "plt.axis('tight')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.xlabel('False Positive Rate')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Precision -Recall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average precision-recall score RF: 0.7661914516406452\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import average_precision_score, auc, roc_curve, precision_recall_curve\n",
    "average_precision = average_precision_score(y_test, rf_pred)\n",
    "print('Average precision-recall score RF: {}'.format(average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Precision - Recall Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, '2-class Precision-Recall curve: AP=0.77')"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import precision_recall_curve\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "precision, recall, _ = precision_recall_curve(y_test, rf_pred)\n",
    "\n",
    "plt.step(recall, precision, color='b', alpha=0.2,\n",
    "         where='post')\n",
    "plt.fill_between(recall, precision, step='post', alpha=0.2,\n",
    "                 color='b')\n",
    "\n",
    "plt.xlabel('Recall')\n",
    "plt.ylabel('Precision')\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.title('2-class Precision-Recall curve: AP={0:0.2f}'.format(\n",
    "          average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Log- Loss "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.013946024652888994\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import log_loss\n",
    "score = log_loss(y_test, rf_pred)\n",
    "print(score)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# F1 - Score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8700564971751412"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f1_score(y_test, rf_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7857142857142857"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_score(y_test, rf_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "dt = DecisionTreeClassifier()\n",
    "dt.fit(X_train,y_train)\n",
    "dt_pred = dt.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[56829    35]\n",
      " [   19    79]]\n",
      "99.90519995786666\n"
     ]
    }
   ],
   "source": [
    "dt_confusion_matrix = confusion_matrix(y_test,dt_pred )\n",
    "dt_accuracy_score = accuracy_score(y_test, dt_pred)\n",
    "print(dt_confusion_matrix)\n",
    "print(dt_accuracy_score*100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1, 'Confusion Matrix')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matrix = confusion_matrix(y_test, dt_pred)\n",
    "sns.heatmap(matrix,annot=True,cbar=False)\n",
    "plt.ylabel('True Label')\n",
    "plt.xlabel('Predicted Label')\n",
    "plt.title('Confusion Matrix')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Classification Report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00     56864\n",
      "           1       0.69      0.81      0.75        98\n",
      "\n",
      "    accuracy                           1.00     56962\n",
      "   macro avg       0.85      0.90      0.87     56962\n",
      "weighted avg       1.00      1.00      1.00     56962\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, dt_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ROC- AUC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9027534726608707"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "auc_roc=metrics.roc_auc_score(y_test,dt_pred)\n",
    "auc_roc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9027534726608707"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve, auc\n",
    "false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test, dt_pred)\n",
    "roc_auc = auc(false_positive_rate, true_positive_rate)\n",
    "roc_auc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ROC- AUC Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'False Positive Rate')"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(10,10))\n",
    "plt.title('Receiver Operating Characteristic')\n",
    "plt.plot(false_positive_rate,true_positive_rate, color='red',label = 'AUC = %0.2f' % roc_auc)\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.plot([0, 1], [0, 1],linestyle='--')\n",
    "plt.axis('tight')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.xlabel('False Positive Rate')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Precision - Recall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average precision-recall score RF: 0.5589622703475549\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import average_precision_score, auc, roc_curve, precision_recall_curve\n",
    "average_precision = average_precision_score(y_test, dt_pred)\n",
    "print('Average precision-recall score RF: {}'.format(average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Precision - Recall Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, '2-class Precision-Recall curve: AP=0.56')"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import precision_recall_curve\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "precision, recall, _ = precision_recall_curve(y_test, dt_pred)\n",
    "\n",
    "plt.step(recall, precision, color='b', alpha=0.2,\n",
    "         where='post')\n",
    "plt.fill_between(recall, precision, step='post', alpha=0.2,\n",
    "                 color='b')\n",
    "\n",
    "plt.xlabel('Recall')\n",
    "plt.ylabel('Precision')\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.title('2-class Precision-Recall curve: AP={0:0.2f}'.format(\n",
    "          average_precision))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Log - Loss\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.03274326588313771\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import log_loss\n",
    "score = log_loss(y_test, dt_pred)\n",
    "print(score)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# F1 - Score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7452830188679246"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f1_score(y_test, dt_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8061224489795918"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recall_score(y_test, dt_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Logistic Regression</th>\n",
       "      <th>Decision Tree</th>\n",
       "      <th>Random Forest</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Metrics</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Confusion Matrix</td>\n",
       "      <td>0.998</td>\n",
       "      <td>0.9992</td>\n",
       "      <td>0.9995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Roc_Auc</td>\n",
       "      <td>0.765</td>\n",
       "      <td>0.9131</td>\n",
       "      <td>0.892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Precision-Recall</td>\n",
       "      <td>0.438</td>\n",
       "      <td>0.614</td>\n",
       "      <td>0.766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Log-Loss</td>\n",
       "      <td>0.034</td>\n",
       "      <td>0.027</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>F1-Score</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.782</td>\n",
       "      <td>0.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Recall_Score</td>\n",
       "      <td>0.53</td>\n",
       "      <td>0.826</td>\n",
       "      <td>0.785</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Logistic Regression Decision Tree Random Forest\n",
       "Metrics                                                         \n",
       "Confusion Matrix               0.998        0.9992        0.9995\n",
       "Roc_Auc                        0.765        0.9131         0.892\n",
       "Precision-Recall               0.438         0.614         0.766\n",
       "Log-Loss                       0.034         0.027         0.013\n",
       "F1-Score                        0.64         0.782          0.87\n",
       "Recall_Score                    0.53         0.826         0.785"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data = {'Logistic Regression':  ['0.998', '0.765','0.438','0.034','0.64','0.53'],\n",
    "        'Decision Tree': ['0.9992','0.9131','0.614','0.027','0.782','0.826'],\n",
    "         'Random Forest':['0.9995','0.892','0.766','0.013','0.87','0.785'],\n",
    "         'Metrics'      :[\"Confusion Matrix\",\"Roc_Auc\",\"Precision-Recall\",\"Log-Loss\",\"F1-Score\",\"Recall_Score\"]}\n",
    "\n",
    "tab = pd.DataFrame (Data, columns = ['Logistic Regression','Decision Tree','Random Forest','Metrics'])\n",
    "tab.set_index(\"Metrics\",inplace = True)\n",
    "tab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
